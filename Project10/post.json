
[{"id":2788,"title":"JQuery : Using Twitter Typeahead With A Custom JSON Feed With Example","permalink":"http:\/\/jondjones.com\/jquery-using-twitter-typeahead-with-a-custom-json-feed-with-example\/","content":"I recently needed to implement a predictive search in EPiServer that get generated from custom results from a custom database table that contains the companies products. \u00a0The overall concept is that a scheduled task runs nightly to combine 6 different tables into a single JSON feed to potential search terms. \u00a0After a bit of Googling I decided to use the Twitter typeahead but I couldn't find an easy straightforward demo that I could just download and start playing with, so attached is my\u00a0<a style=\"font-size: 13px; line-height: 19px;\" href=\"http:\/\/jondjones.com\/wp-content\/uploads\/2013\/08\/TypaheadExample.zip\">TypeaheadExample<\/a>\u00a0demo. \u00a0It's based upon a tutorial <a href=\"http:\/\/fusiongrokker.com\/post\/heavily-customizing-a-bootstrap-typeahead\">here <\/a>with a bit of customization.\r\n\r\n<strong>Troubleshooting<\/strong>\r\n\r\nYou need to run the typeahead using a web server, if you just to try to load the file using chrome directly you will get the following error :\u00a0Failed to load resource: Origin null is not allowed by Access-Control-Allow-Origin.\r\n\r\nIf you are using IIS, make sure you jons is added to your websites allowed MIME types, open IIS -&gt; MIME types -&gt; Add -&gt; 'json' and '<strong><code>application\/json'<\/code><\/strong>\r\n\r\n&nbsp;\r\n\r\n&nbsp;","excerpt":"I recently needed to implement a predictive search in EPiServer that get generated from custom results from a custom database table that contains the companies products. \u00a0The overall concept is that a scheduled task runs nightly to combine 6 different tables into a single JSON feed to potential search terms. \u00a0After a bit of Googling [&hellip;]","date":"2013-08-30 10:49:55","author":"jon","thumbnail":"http:\/\/jondjones.com\/wp-content\/uploads\/2013\/06\/bannercodetutorial.jpg","categories":["Development"],"tags":[null]},{"id":2777,"title":"EPiServer : Creating A Custom Checkbox Category PageType Picker Control","permalink":"http:\/\/jondjones.com\/episerver-creating-a-custom-checkbox-category-pagetype-picker-control\/","content":"EPiserver is great at a lot of things but I think it's tagging does let it down a bit without having to buy one of the bulk upgrade products. \u00a0 In EPiserver all you can do is define a single global category that is available to all page template. \u00a0We had a requirement to create different categories based on different page types. \u00a0If we added a global category then editors would be able to add in wrong categories for their page type.\r\n\r\nI found a good article <a href=\"http:\/\/shahinalborz.se\/2013\/04\/episerver-custom-property-multiple-category-checkbox-list-from-specific-sub-category\/\">here <\/a>that solved a similar problem, however when I implemented it I had a lot of issues around saving. \u00a0With the proposed solution if you clicked save twice the data would be lost. \u00a0I made an update to only publish but his made other fields break. \u00a0\u00a0In my site I have created a new category section as shown :\r\n\r\n<a style=\"font-size: 13px; line-height: 19px;\" href=\"http:\/\/jondjones.com\/wp-content\/uploads\/2013\/08\/Screenshot_5.jpg\"><img class=\"alignnone size-full wp-image-2778\" alt=\"Screenshot_5\" src=\"http:\/\/jondjones.com\/wp-content\/uploads\/2013\/08\/Screenshot_5.jpg\" width=\"801\" height=\"355\" \/><\/a>\r\n\r\nWhen I define my property (I'll get to that later) I use the 'HelpText' attribute to define which part of the category tree the property should use, as seen below the HelpText matches the name I've set-up in my categories.\r\n<pre class=\"c-sharp\">        [PageTypeProperty(EditCaption = \"Tags\", \r\n            Type = typeof(PropertyCategoryCheckBoxList), \r\n            HelpText = \"ArticleRoot\", \r\n            SortOrder = 100,\r\n            Tab = typeof(ArticlesTab))]\r\n        public virtual string TagIds { get; set; }<\/pre>\r\nOne important thing to note about this process is that even though the type is of \u00a0'PropertyCategoryCheckboxList' the property is string. \u00a0What this means is when we iterate through the control list later any selected ID will have to be stored in a comma separated string.\r\n\r\nFirst define the property class :\r\n<pre class=\"c-sharp\">[PageDefinitionTypePlugIn(DisplayName = \"Category Checkbox List\")]\r\n    public class PropertyCategoryCheckBoxList : PropertyMultipleValue\r\n    {\r\n        public override IPropertyControl CreatePropertyControl()\r\n        {\r\n            return new PropertyCategoryCheckBoxListControl();\r\n        }\r\n    }<\/pre>\r\nNext we need to define the control class:\r\n<pre class=\"c-sharp\"> public class PropertyCategoryCheckBoxListControl : PropertySelectMultipleControlBase\r\n    {\r\n        private static readonly log4net.ILog Logger = log4net.LogManager.GetLogger\r\n            (System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);\r\n\r\n        private List CategorgyIds;\r\n\r\n        protected override void SetupEditControls()\r\n        {\r\n            Category parentCategory = null;\r\n            var definition = PageDefinition.Load(PropertyData.PageDefinitionID);\r\n\r\n            if (!string.IsNullOrEmpty(definition.HelpText))\r\n            {\r\n                parentCategory = Category.Find(definition.HelpText);\r\n            }\r\n\r\n            if (parentCategory == null)\r\n            {\r\n                parentCategory = Category.Find(Name);\r\n            }\r\n\r\n            if (parentCategory == null)\r\n            {\r\n                parentCategory = Category.GetRoot();\r\n            }\r\n\r\n            CategorgyIds = GetCategoryIds(PropertyData.Value.ToString());\r\n\r\n            foreach (Category  category in parentCategory.Categories)\r\n            {\r\n                var li = new ListItem(category.Description, category.ID.ToString(CultureInfo.InvariantCulture));\r\n                li.Selected = CategorgyIds.Any(c =&gt; c == category.ID);\r\n                EditControl.Items.Add(li);\r\n            }\r\n        }\r\n\r\n        private List GetCategoryIds(string categories)\r\n        {\r\n            if (string.IsNullOrEmpty(categories)) return null;\r\n\r\n            var categoryIdList = new List(); \r\n\r\n            try\r\n            {\r\n                categoryIdList.AddRange(categories.Split(',').Select(id =&gt; Convert.ToInt32(id)));\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                Logger.Error(ex);\r\n            }\r\n\r\n            return categoryIdList;\r\n        }\r\n}<\/pre>\r\nIn the code above we're :\r\n<ul>\r\n\t<li>Getting the value of help text and then querying the category list to get all the children<\/li>\r\n\t<li>Getting any existing user selection (stored in ProperyData.Value as a comma seperated string) and then calling GetCategoryIds <\/li>\r\n\t<li>GetCategoryIds parses that stringinto a list of Id's<\/li>\r\n\t<li>Add the controls to the page and select any of the entries that have been previously selected.<\/li>\r\n<\/ul>\r\nThe last part of the puzzle is ApplyEditChange an storing the selected values which was the main issue I had with the code I found on-line.\r\n<pre class=\"c-sharp\">        public override void ApplyEditChanges()\r\n        {\r\n            base.ApplyEditChanges();\r\n\r\n            try\r\n            {\r\n                var categoryIdList = new List();\r\n                foreach (ListItem li in EditControl.Items)\r\n                {\r\n                    if (li.Selected)\r\n                    {\r\n                        var categoryId = Category.Find(Convert.ToInt32(li.Value)).ID;\r\n                        categoryIdList.Add(categoryId.ToString());\r\n                    }\r\n                }\r\n\r\n                PropertyData.Value = String.Join(\",\", categoryIdList);  \r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                Logger.Error(ex);\r\n            }\r\n        }<\/pre>\r\nThe big difference with my code is that I'm storing the users selection is stored using the PropertyData.Value rather than creating a clone and saving that clone and creating all the nastiness that causes. All the code is doing :\r\n<ul>\r\n\t<li>Loop through the checkboxlist displayed and store anything that is ticked in categoryIdList<\/li>\r\n\t<li>Iterate through cateogryIdList and create a string of Id's seperated by a comma<\/li>\r\n\t<li>Store this string using PropertyData.Value<\/li>\r\n<\/ul>\r\n<span style=\"font-size: 13px; line-height: 19px;\">If the code above works in you should have\u00a0a check box list on your page type that pulls in all the child categories.<\/span>\r\n\r\n<a href=\"http:\/\/jondjones.com\/wp-content\/uploads\/2013\/08\/Screenshot_6.jpg\"><img class=\"alignnone size-full wp-image-2779\" alt=\"Screenshot_6\" src=\"http:\/\/jondjones.com\/wp-content\/uploads\/2013\/08\/Screenshot_6.jpg\" width=\"393\" height=\"61\" \/><\/a> \r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n<a href=\"http:\/\/jondjones.com\/wp-content\/uploads\/2013\/08\/PropertyCategoryCheckBoxListControl.zip\">PropertyCategoryCheckBoxListControl<\/a>\r\n\r\n&nbsp;","excerpt":"EPiserver is great at a lot of things but I think it&#8217;s tagging does let it down a bit without having to buy one of the bulk upgrade products. \u00a0 In EPiserver all you can do is define a single global category that is available to all page template. \u00a0We had a requirement to create [&hellip;]","date":"2013-08-21 12:26:10","author":"jon","thumbnail":"http:\/\/jondjones.com\/wp-content\/uploads\/2013\/06\/bannerepitutorial.jpg","categories":["EPi Server"],"tags":[null]},{"id":2770,"title":"EpiServer : How To Add Custom Table Styles In The TinyMCE Editor","permalink":"http:\/\/jondjones.com\/episerver-how-to-add-custom-table-styles-in-the-tinymce-editor\/","content":"We had an issue recently with styling tables in EPiServer. \u00a0EPiServer\u00a0implements the tinyMCE\u00a0project as the text editor within Epi. tinyMCE is very flexible and uses a plug-in based framework to allow customization like\u00a0adding custom buttons and overriding default behaviour. \u00a0In EPiServer if an editor\u00a0wants to add a table to a page they can click \u00a0on the table button which launches a modal that allows them to add columns, add a style. \u00a0Our problem is our site uses a custom table style and we did not want editors to manually have to modify any HTML directly.\r\n\r\nTo get around the problem I wanted to pre-populate the style box with a list of our custom styles. \u00a0I thought finding information about adding in a style would be simple but after a few hours of searhing I couldn't find a tutorial on how to do it in EPi.  I fodun two approaches to solving this problem so I thought I would share them\r\n\r\n1) If you open the table.html file you can manually add in the styles in the HTML mark-up of the form.  If you go to \r\n\r\nC:\\Program Files (x86)\\EPiServer\\CMS\\6.1.379.0\\Application\\Util\\Editor\\tinymce\\jscripts\\tiny_mce\\plugins\\table\\table.htm\r\n\r\nYou should be able to see the following snippet, simply add a new option for each new style you require.\r\n<pre class=\"html\">\r\n\t\t\t\t\t\t\t  <tr id=\"styleSelectRow\">\r\n\t\t\t\t\t\t\t\t<td><label id=\"classlabel\" for=\"class\">{#class_name}<\/label><\/td>\r\n\t\t\t\t\t\t\t\t<td colspan=\"3\">\r\n\t\t\t\t\t\t\t\t <select id=\"class\" name=\"class\" class=\"mceEditableSelect\">\r\n\t\t\t\t\t\t\t\t \t<option value=\"tablestyle01\" selected=\"selected\">tablestyle01<\/option>\r\n\t\t\t\t\t\t\t\t <\/select><\/td>\r\n\t\t\t\t\t\t\t  <\/tr>\r\n<\/pre>\r\n\r\nNow if you open up EPiserver you will see all the styles added into the table dialogue\r\n\r\n<a href=\"http:\/\/jondjones.com\/wp-content\/uploads\/2013\/08\/epserveritinymcetable.png\"><img src=\"http:\/\/jondjones.com\/wp-content\/uploads\/2013\/08\/epserveritinymcetable.png\" alt=\"epserveritinymcetable\" width=\"532\" height=\"543\" class=\"alignnone size-full wp-image-2773\" \/><\/a>","excerpt":"We had an issue recently with styling tables in EPiServer. \u00a0EPiServer\u00a0implements the tinyMCE\u00a0project as the text editor within Epi. tinyMCE is very flexible and uses a plug-in based framework to allow customization like\u00a0adding custom buttons and overriding default behaviour. \u00a0In EPiServer if an editor\u00a0wants to add a table to a page they can click \u00a0on [&hellip;]","date":"2013-08-19 14:45:06","author":"jon","thumbnail":"http:\/\/jondjones.com\/wp-content\/uploads\/2013\/06\/bannerepitutorial.jpg","categories":["Development"],"tags":[null]},{"id":2617,"title":"Great Open Source Libraries For .NET CMS Developers","permalink":"http:\/\/jondjones.com\/10-great-open-source-libraries-for-net-cms-developers\/","content":"As a CMS developer, one of the biggest pains I feel in my projects is change. \u00a0Change is part and parcel of creating websites, as it's 'simple' to move a few things around on screen... \u00a0Clients who asks for feature 'x' today will almost certainly want it to do something different in a week's time. \u00a0As a web developer, it's my responsibility to build a system that doesn't require a significant investment when it needs to be changed. \u00a0I'm not a mind reader and I haven't met a developer yet who can architect a system the first time around that will work perfectly for requirements that the client hasn't even thought about yet.\r\n\r\nWith that in mind, I have always favoured using third party open source libraries in my projects. \u00a0Firstly, it saves a significant amount of time (and consequently money) on unneeded development, testing and maintenance of these features. This saving means I have more room to play with the more interesting features of the site. Secondly, if you are anything like me, you won't want to write the same code over AND over AND over. \u00a0I've had a look around the web and I can't find many articles written specially for us CMS developers that highlight which projects you should look at, so, I thought I'd start my own list of open source tools I use for my clients :\r\n<ol>\r\n\t<li><a href=\"http:\/\/getbootstrap.com\/\">Bootstrap<\/a>\u00a0:\u00a0A great simple library that will make your front-end not look like a dog's dinner. \u00a0I use this all the time for bespoke applications when I don't have access to a designer. \u00a0Not having to worry about creating fluid grids, menus and form styles saves me days worth of effort.<strong>Why You Should Use It<\/strong> : As a developer I regularly need to create user interfaces for back-end systems. \u00a0Bootstrap will vastly improve the look and feel of these system in a fraction of the time.<\/li>\r\n\t<li><a href=\"http:\/\/www.nunit.org\/\">NUnit<\/a>\u00a0:\u00a0The best unit testing framework I've used. \u00a0Originally written in Java it has been ported over to .NET. \u00a0There are so many great plug-ins and visual studio support for it, it's an invaluable asset.<strong>Why You Should Use It<\/strong>\u00a0: As a .NET developer it's your best tool for unit testing. \u00a0If you don't know why you should use Unit Tests this is a great <a href=\"http:\/\/www.amazon.co.uk\/Pragmatic-Unit-Testing-Junit-Programmers\/dp\/0974514012\">book<\/a>.<\/li>\r\n\t<li><a href=\"http:\/\/docs.structuremap.net\/\">Structure Map<\/a>\u00a0: Structure map is a great IOC container for .NET. \u00a0There are so many out there but this is the easiest one I've used so far.<strong>Why You Should Use It<\/strong>\u00a0: Creating SOLID code will future proof your code as much as possible, meaning your code should be less painful to change when the inevitable requirement changes happen. \u00a0Structure Map is as good as any of the other IOC container to help you remove your dependency.<\/li>\r\n\t<li><a href=\"http:\/\/fluentassertions.codeplex.com\/\">Fluent Assertions<\/a>\u00a0: Fluent assertions is a set of extension methods that allow you to write your unit tests in a more readable and human format. \u00a0There's a good article written by the author <a href=\"http:\/\/www.dennisdoomen.net\/2011\/07\/why-i-created-fluent-assertions-in.html\">here<\/a> about why he created it.<strong>Why You Should Use It<\/strong>\u00a0: It makes your Unit Tests easier to read, when the change requests come in and you need to re-look at those tests you wrote six months ago this will help make it easier for you to get back up to speed.<\/li>\r\n\t<li><a href=\"http:\/\/www.umbraco.org\">Umbreco<\/a>\u00a0: If you are\u00a0designing a website you don't want to reinvent the wheel from scratch. \u00a0If you haven't got the budget to buy any commercial software then Umbreco is a great to start to kick off your project. \u00a0I seem to be using it more and more.<strong>Why You Should Use It<\/strong>\u00a0: If you have a small budget for your project and you can't afford a commercial CMS (granted it's not needed most of the time) then this is your best option to get started creating that build quickly.<\/li>\r\n\t<li><a href=\"http:\/\/sourceforge.net\/projects\/log4net\/\">Log4Net<\/a> : Log4NET is a great error logging module. \u00a0It's easy to configure to either write out to your file system, database or whatever you want. \u00a0With Nuget you can add it to your project in seconds, so why waste time writing any custom?<strong>Why You Should Use It<\/strong>\u00a0: After you deploy your project, you WILL have to maintain it. \u00a0You don't want to spend hours trying to track down where that mysterious error is coming from. \u00a0Using Log4Net will give you a central point of call to help you hunt those issues down. \u00a0It's far more versatile then anything you would be able to build in the same time.<\/li>\r\n\t<li><a href=\"http:\/\/james.newtonking.com\/projects\/json-net.aspx\">Json.net<\/a> : Great little framework that allows you to decorate your POCO's\/DTO's or whatever naming convention you use to add in in your JSON names. \u00a0I find it really useful, \u00a0as if you decorate your objects with lower case, Resharper complains... a lot. \u00a0Using Json.NET I can use good .NET naming convention and decorate everything with suitable JSON naming conventions; after you are\u00a0done JSON.net will then create your feed for you.<strong>Why You Should Use It<\/strong>\u00a0: If you need to create (or consume) any form of JSON then this will make your code more readable.<\/li>\r\n\t<li><a href=\"http:\/\/automapper.codeplex.com\/\">Automapper<\/a> : Great utility that with minimal configuration will automatically map your objects for you.<strong>Why You Should Use It<\/strong>\u00a0: When you need to add in that extra feature, add that extra property, this will make that boilerplate DTO to DTO code a lot easer to read and to change.<\/li>\r\n\t<li><a href=\"https:\/\/code.google.com\/p\/moq\/\">Moq<\/a> : \u00a0Simple mocking library that support Lambda\/LINQ.<strong>Why You Should Use It<\/strong>\u00a0: If you're using a CMS then a large part of your system will be hidden under the software's API. \u00a0If you want to create good scalable software, then you will need to create MOQ's to deal with a lot of your CMS API calls.<\/li>\r\n\t<li><a href=\"http:\/\/www.nuget.org\/packages\/CsvTools\/\">CsvReader<\/a>\u00a0: I frequently have to create CSV reports for people. \u00a0This little library allows you to throw a list of Enumerable objects at it and creates a nice CSV with the headers, you can also create custom mappings and read CSV files in directly to object.<strong>Why You Should Use It<\/strong>\u00a0: Why re-invent the wheel for your CSV needs ?<\/li>\r\n<\/ol>","excerpt":"As a CMS developer, one of the biggest pains I feel in my projects is change. \u00a0Change is part and parcel of creating websites, as it&#8217;s &#8216;simple&#8217; to move a few things around on screen&#8230; \u00a0Clients who asks for feature &#8216;x&#8217; today will almost certainly want it to do something different in a week&#8217;s time. [&hellip;]","date":"2013-08-02 10:16:50","author":"jon","thumbnail":"http:\/\/jondjones.com\/wp-content\/uploads\/2013\/06\/bannercodetutorial.jpg","categories":["Development"],"tags":[null]},{"id":1495,"title":"EpiServer : CS1519: Invalid token &#8216;,&#8217; in class, struct, or interface member declaration error","permalink":"http:\/\/jondjones.com\/episerver-cs1519-invalid-token-in-class-struct-or-interface-member-declaration-error\/","content":"This is a quick one that will, hopefully, save someone out there an hour or two! Recently I was doing a deployment and I came across this error:\r\n\r\n<img class=\"alignnone size-full wp-image-1496\" alt=\"Screenshot_1\" src=\"http:\/\/jondjones.com\/wp-content\/uploads\/2013\/06\/Screenshot_1.png\" width=\"1025\" height=\"527\" \/>\r\n\r\nI tried all the usualy IISREST, clean the temp .NET files a reboot but nothing worked until I realised what had happened... I did some cleaning on the server and had 'cleaned' the 'Bin' folder. When I did my next deploy, some of the core EPi assemblies had not copied over correctly because some of the the assemblies were set as 'copy local' set to true. When I did my deployment, the EPi core assemblies were missing and the error occured.\r\n\r\nFix: Make sure you have all your core EPiserver dll's included in your build!","excerpt":"This is a quick one that will, hopefully, save someone out there an hour or two! Recently I was doing a deployment and I came across this error: I tried all the usualy IISREST, clean the temp .NET files a reboot but nothing worked until I realised what had happened&#8230; I did some cleaning on [&hellip;]","date":"2013-06-28 08:39:18","author":"jon","thumbnail":"http:\/\/jondjones.com\/wp-content\/uploads\/2013\/06\/bannerepitutorial.jpg","categories":["EPi Server"],"tags":[null]},{"id":556,"title":"40 Essential Tools For .NET Developers","permalink":"http:\/\/jondjones.com\/40-essential-tools-for-net-developers\/","content":"I've been meaning to publish this for ages so after nearly a year of planning......\r\n<h3>Software<\/h3>\r\n<a href=\"http:\/\/www.jetbrains.com\/resharper\/\">Resharper<\/a>\u00a0: Simply the best .NET tool... FACT. Try it once and you'll never go back.\r\n<a href=\"http:\/\/studiostyl.es\/schemes\/son-of-obsidian\">Son Of Obsidian<\/a>\u00a0: Cool Visual Studio theme that will help reduce eye strain,\r\n<a href=\"http:\/\/archive.msdn.microsoft.com\/sourceanalysis\/Release\/ProjectReleases.aspx?ReleaseId=1425\">Stylecop<\/a>\u00a0: Provides a very simple way to\u00a0introduce\u00a0coding standards to your work. \u00a0VS will point out all your small\u00a0discretions\u00a0so you don't have to worry\u00a0about\u00a0them\u00a0any more.\r\n<a href=\"http:\/\/channel9.msdn.com\/achievements\/visualstudio\">Visual Studio Achievements<\/a>\u00a0: Unlocks\u00a0achievements\u00a0as you code.\r\n<a href=\"http:\/\/fxcopintegrator.codeplex.com\/\">FX Cop Intergrator<\/a>\r\n<a href=\"http:\/\/msdn.microsoft.com\/en-us\/library\/bb429476(v=vs.80).aspx\">FX Cop<\/a>\r\n<a href=\"http:\/\/www.infragistics.com\/products\/indigo-studio\">Indigo Studio<\/a> Brilliant and simple wire framing tool.\r\n<a href=\"http:\/\/www.sourcegear.com\/diffmerge\/\">Diffmerge<\/a>\r\n<a href=\"http:\/\/www.devart.com\/dbforge\/sql\/sqlcomplete\/\">SQL Complete <\/a> Intellisense for SQL!\r\n<a href=\"http:\/\/keepass.info\/download.html\">Keypass<\/a> Best password manager I've used.\r\n<a href=\"http:\/\/www.fiddler2.com\/fiddler2\/\">Fiddler<\/a> Useful for debugging in IE and doing network troubleshooting\r\n<a href=\"http:\/\/www.manictime.com\/\">Manic Time<\/a> Tracks your time easily\r\n<a href=\"http:\/\/www.mremote.org\/\">M-remote<\/a> Great RDP client. I haven't used remote desktop in years.\r\n<a href=\"http:\/\/www.jetbrains.com\/decompiler\/\">dotPeek<\/a> Brilliant free replacement for reflector.\r\n<a href=\"http:\/\/www.helicontech.com\/isapi_rewrite\/\">Isapi Rewrite<\/a> Redirect module for IIS, getting more obsolete nowadays\r\n<a href=\"https:\/\/sites.google.com\/site\/sqlprofiler\/\">SQL Profiler<\/a>\u00a0Free SQL profile when you only have SQL express on your server\r\n<a href=\"http:\/\/www.apachefriends.org\/en\/xampp-windows.html\">Xampp for Windows<\/a> Simple LAMP installation\r\n<a href=\"http:\/\/www.sublimetext.com\/2\">Sublime 2<\/a>My Favourite text editor\r\n<a href=\"https:\/\/projects.gnome.org\/dia\/\">Dia<\/a> Really handy if you need to knock up a quick ERD diagram\r\n<a href=\"http:\/\/www.launchy.net\/\">Launchy<\/a> Lightning fast program launcher from your keyboard\r\n<a href=\"https:\/\/www.dropbox.com\/\">Dropbox<\/a> File back-up\r\n<a href=\"http:\/\/home.snafu.de\/tilman\/xenulink.html\">Xenu<\/a>\u00a0Can be a life saver if you get 500's on your web server. Finds all broken URLs on your site.\r\n<a href=\"http:\/\/www.emptyloop.com\/unlocker\/\">Unlocker<\/a>\u00a0Unlocks files that have been locked by Windows, essential tool!\r\n<a href=\"http:\/\/www.sourcetreeapp.com\/\">SourceTree<\/a>\u00a0 Git client for Windows\r\n<a href=\"https:\/\/www.virtualbox.org\/\">Virtualbox<\/a> Essential for cross browser testing\r\n<a href=\"http:\/\/www.clamwin.com\/\">ClamWin Antivirus<\/a>Free anti-virus\r\n<h3>Cool Frameworks and software<\/h3>\r\n<a href=\"http:\/\/www.trello.com\">Trello<\/a> By far the easiest and simplest project management tool I've ever used.\r\n<a href=\"http:\/\/www.getharvest.com\">Harvest<\/a> Cool time tracking software, integrates with Trello\r\n<a href=\"http:\/\/wordpress.com\/\">Wordpress<\/a>\u00a0Great for knocking a site up quickly.\r\n<a href=\"http:\/\/www.nunit.org\/\">N-Unit<\/a> Great unit testing framework\r\n<a href=\"http:\/\/fluentassertions.codeplex.com\/\">Fluent Assertions<\/a> Write Unit Test easier\r\n<a href=\"http:\/\/gsalib.codeplex.com\/\">GSA Lib<\/a> Brilliant wrapper for Google Site Search\r\n<a href=\"http:\/\/www.infragistics.com\/\">Infragistics<\/a> Great component library for desktop and web apps\r\n<a href=\"http:\/\/www.sliver.com\/dotnet\/SnippetCompiler\/\">Snippet Compiler<\/a>\r\n<a href=\"http:\/\/docs.structuremap.net\/\">StructureMap<\/a> Nice DI framework\r\n<a href=\"https:\/\/github.com\/AutoMapper\/AutoMapper\">Automapper&lt;\/&gt;Simplify object mappings\r\n<\/a><a href=\"http:\/\/twitter.github.io\/bootstrap\/\">Bootstrap<\/a> Make your site look a million times better in seconds","excerpt":"I&#8217;ve been meaning to publish this for ages so after nearly a year of planning&#8230;&#8230; Software Resharper\u00a0: Simply the best .NET tool&#8230; FACT. Try it once and you&#8217;ll never go back. Son Of Obsidian\u00a0: Cool Visual Studio theme that will help reduce eye strain, Stylecop\u00a0: Provides a very simple way to\u00a0introduce\u00a0coding standards to your work. [&hellip;]","date":"2013-06-25 16:25:24","author":"jon","thumbnail":"http:\/\/jondjones.com\/wp-content\/uploads\/2013\/06\/bannercodetutorial.jpg","categories":["Development"],"tags":[null]},{"id":498,"title":"Episerver : The Easiest Way To Add An Error Handler Into Your Epi Site","permalink":"http:\/\/jondjones.com\/episerver-quick-and-simple-ways-to-add-an-error-handler-to-your-epi-site\/","content":"EPiserver uses <a href=\"http:\/\/www.codeproject.com\/Articles\/140911\/log4net-Tutorial\">Log4Net<\/a> as it's default error handler. The benefit of Log4Net for a developer is that you can also use it with very minimal configration. Log4Net is a really simple and flexible error handling system which is far better to use instead of having to come up with some a custom solution yourself, or, importing additional bloat from Nuge. All you have to do is enabled it in the config, send your exception to Log4Net in your code and everything else is done for you.\r\n\r\nTo get start using Log4Net on your site First, in your webroot you will need to make a few tweaks to a file called 'EPiServerLog.config'. This is where all the logging configuration lives. At the end of that file you should see a section that looks similar to the below snippet. All you need to do to enable Log4Net on your site is to enable the appender ref so you config should look like this :\r\n<pre class=\"c-sharp\">  \r\n    <!-- You can use levels, in increasing order of verbosity: Off, Fatal, Error, Warn, Info, Debug, All -->\r\n\r\n    <!-- Uncomment one or all of the appender-ref's, or add additional ones -->\r\n    <b><\/b>\r\n\r\n    <!-- LogView4net is a good application to use to listen to logging output via UDP. Find it on sourceforge. -->\r\n    <!-- appender-ref ref=\"udpLogAppender\" \/ --><\/pre>\r\nBoom! That's all there is to it, Log4Net is now configured for your site.. simple hey ? The next step is sending your exceptions to Log4Net to handler. First you need to add a reference to the assembly in your class:\r\n<pre class=\"c-sharp\">using log4net;<\/pre>\r\nYour next step is to declare the logger as an instance variable in your class :\r\n<pre class=\"c-sharp\">        private static readonly ILog Logger = log4net.LogManager.GetLogger\r\n            (System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);<\/pre>\r\nWhat we're doing here is using reflection to tell Log4Net the class name to log (if you rename it you don't have to remember to update your logging reference). I normally add this into a base class so I only define it once but it's up to you. After this all you need to do is send any exceptions you may trap to Log4Net.\r\n<pre class=\"c-sharp\">        public void Example()\r\n        {\r\n            try\r\n            {\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                Logger.Error(ex);\r\n            }\r\n        }<\/pre>\r\nThe code snippets pretty simple, you just call Log4Net rather than throwing the exception. I also find the Logger.Info method pretty useful at times and it's worth doing some research on.\r\n\r\nNow you have your system up and running how do you read these exceptions ? Simples... in your webroot you should now have a file called 'EPiServerErrorLog.txt' everyting is sent to their. In Epi the default is to log all warnings (set in the EPiServerLog.config file) :\r\n<pre class=\"c-sharp\"><\/pre>\r\nI normally only set my logger to log fatal issue as the warning level is too verbose. For reference you can use FATAL, ERROR, WARN, INFO, DEBUG. That's all there is too it. Enjoy :)","excerpt":"EPiserver uses Log4Net as it&#8217;s default error handler. The benefit of Log4Net for a developer is that you can also use it with very minimal configration. Log4Net is a really simple and flexible error handling system which is far better to use instead of having to come up with some a custom solution yourself, or, [&hellip;]","date":"2013-06-20 16:29:23","author":"Jon D Jones","thumbnail":"http:\/\/jondjones.com\/wp-content\/uploads\/2013\/06\/bannerepitutorial.jpg","categories":["EPi Server"],"tags":[null]},{"id":494,"title":"WordPress : Creating a Second Level Navigation Only Menu","permalink":"http:\/\/jondjones.com\/wordpress-creating-a-second-level-navigation-only-menu\/","content":"This is the last post based on my mini Wordpress project. This post will show you how to create a custom Wordpress menu that will only show the first page in the tree and the second levels as children, regardless of where you are in the page.\r\n\r\nThe first thing the code does is get the current page and recurse up the tree until it finds the first page in the tree. Once it has the first page, it writes an anchor in a ul. The next step is querying Wordpress for all the page ID's that have a parent Id of the first page. Finally it iterates through these ID's and displays them in a child ul.\r\n<pre class=\"php\"><\/pre>","excerpt":"This is the last post based on my mini WordPress project. This post will show you how to create a custom WordPress menu that will only show the first page in the tree and the second levels as children, regardless of where you are in the page. The first thing the code does is get [&hellip;]","date":"2013-06-03 14:39:36","author":"Jon D Jones","thumbnail":"http:\/\/jondjones.com\/wp-content\/uploads\/2013\/06\/bannerwp.jpg","categories":["Wordpress"],"tags":[null]},{"id":488,"title":"WordPress : The easy Way To Add Extra Meta Data To Your Page","permalink":"http:\/\/jondjones.com\/wordpress-the-easy-way-to-add-extra-meta-data-to-your-page\/","content":"As part of my recent mini project I needed to add certain meta data to different posts and pages, for example a thumbnail image for a gallery, image captions etc... In order to do this I used a great free plug-in called '<a href=\"http:\/\/wordpress.org\/plugins\/advanced-custom-fields\/\">Custom Fields<\/a>'. After you install the plug-in you can create custom meta data that you can add to a page. The clever bit about the plug-in is you can use condition logic to decide where your custom fields get applied, for example for each different category you have you can automatically have different meta-data. If you want to know more about the plug-in go through the plug-ins documentation as it is quite extensive.\r\n\r\n<a href=\"http:\/\/jondjones.com\/wp-content\/uploads\/2013\/05\/wordpresscustomfields11.png\"><img class=\"alignnone size-medium wp-image-489\" title=\"wordpresscustomfields\" alt=\"\" src=\"http:\/\/jondjones.com\/wp-content\/uploads\/2013\/05\/wordpresscustomfields1-300x119.png\" width=\"300\" height=\"119\" \/><\/a>\r\n\r\nIn you code you can then iterate through your posts\/pages and get the meta-data from the page, using the following snippet :\r\n<pre class=\"php\">get_field('pdf_url', $pageChild-&gt;ID);<\/pre>\r\nUsing this plug-in I was very easily and quickly able to create a custom products gallery that linked to a details page. Full code example below :\r\n<pre class=\"php\">$child_pages = $wpdb-&gt;get_results(\"SELECT * FROM $wpdb-&gt;posts WHERE post_parent = \".$post-&gt;ID.\"    AND post_type = 'page' ORDER BY menu_order\", 'OBJECT');    ?&gt;\r\n\t\t\t\t\t\t\t<!--?php \r\n\t\t\t\t\t\t\t\tif ( $child_pages ) : foreach ( $child_pages as $pageChild ) : setup_postdata( $pageChild ); \r\n\r\n\t\t\t\t\t\t\t\t$pdf = get_field('pdf_url', $pageChild--->ID);\r\n\t\t\t\t\t\t\t\t$link = !empty($pdf) ? $pdf : get_permalink($pageChild-&gt;ID);\r\n\r\n\t\t\t\t\t\t\t?&gt;<\/pre>\r\n<header id=\"img\"><img alt=\"\" src=\"&lt;?php echo get_field('case_study_thunbmail', $pageChild-&gt;ID); ?&gt;\" width=\"213\" height=\"133\" \/><\/header>","excerpt":"As part of my recent mini project I needed to add certain meta data to different posts and pages, for example a thumbnail image for a gallery, image captions etc&#8230; In order to do this I used a great free plug-in called &#8216;Custom Fields&#8216;. After you install the plug-in you can create custom meta data [&hellip;]","date":"2013-05-27 14:29:33","author":"Jon D Jones","thumbnail":"http:\/\/jondjones.com\/wp-content\/uploads\/2013\/06\/bannerwp.jpg","categories":["Wordpress"],"tags":[null]},{"id":476,"title":"WordPress : Creating Custom Pagination In Code","permalink":"http:\/\/jondjones.com\/wordpress-creating-custom-pagination-in-code\/","content":"Hey all, this week's been a bit of a change for me as I've been back to roots playing with PHP for a client. They had a requirement to make a news page in Wordpress that had Google like search pagination for their news and jobs categories.\r\n\r\n<a href=\"http:\/\/jondjones.com\/wp-content\/uploads\/2013\/05\/wordpresspagiantion11.png\"><img class=\"alignnone size-medium wp-image-479\" title=\"wordpresspagiantion\" alt=\"\" src=\"http:\/\/jondjones.com\/wp-content\/uploads\/2013\/05\/wordpresspagiantion1-300x42.png\" width=\"300\" height=\"42\" \/><\/a>\r\n\r\nOut of the box, Wordpress only comes with the next and previous links so I thought I'd knock-up a quick pagination control. The first thing any pagination control needs is the total number of posts for that category, I did this using this snippet:\r\n<pre class=\"php\"> \r\n\t\t\t\t$postsInCat = get_term_by('name', $catname,'category');\r\n\t\t\t\t$totalPosts = $postsInCat-&gt;count;<\/pre>\r\nNext, I needed to know the number of pages to display per page. For this I used the default posts_per_page option in wordpress. You can change this value yourself by logging into your admin and changing your URL to 'wp-admin\/options-general.php'. This will display a list of site options available to you. You can then get any of these options from a page by using this :\r\n<pre class=\"php\"> \r\n   \t\t\t\t$postsperpage = get_option('posts_per_page');<\/pre>\r\nThe next step was to read the current page from the\u00a0query-string\u00a0 \u00a0I do this in $paged variable. Next I call the Wordpress API to get the posts I want for the given page I'm on and display the results.\r\n\r\nThe last part of the code snippet deals with the pagination. This first statement checks the number of posts per page has been set to a value great than 0.\u00a0\u00a0If it hasn't, then the server will throw a divide by 0 error. \u00a0If the value is greater than 0 then the page figures out the total number of pages to display in the pagination, using :\r\n<pre class=\"php\">     $numSearchFilters = $totalPosts \/ $postsperpage;<\/pre>\r\nIf all the results fit within one page then the pagination isn't displayed as it's not needed. If there are more than one page of results, then I use a simple for loop to display all the pages, setting an active class for the page that matches the current page.\r\n<pre class=\"php\"> \r\n\t\t\t\t\/\/ Get's the total number of pages in results (used for pagintation page filters)\r\n\t\t\t\t$postsInCat = get_term_by('name', $catname,'category');\r\n\t\t\t\t$totalPosts = $postsInCat-&gt;count;\r\n   \t\t\t\t$postsperpage = get_option('posts_per_page');\r\n\r\n   \t\t\t\t\/\/ Used for the pagination\r\n\t\t\t\t$paged = 1;\r\n\r\n\t\t\t\tif ( get_query_var('paged') ) \r\n\t\t\t\t{\r\n\t\t\t\t\t$paged = get_query_var('paged');\r\n\t\t\t\t} \r\n\t\t\t\telse if ( get_query_var('page') ) \r\n\t\t\t\t{\r\n\t\t\t\t\t$paged = get_query_var('page');\r\n\t\t\t\t} \r\n\r\n   \t\t\t\t$cat=get_cat_ID($catname); \r\n\r\n   \t\t\t\t$args = array('cat' =&gt; $cat, 'paged' =&gt; $paged, 'orderby' =&gt; 'date', 'order' =&gt; 'ASC');\r\n   \t\t\t\t$posts = new WP_Query($args);\r\n\r\n   \t\t\t\tif($posts-&gt;have_posts()) : \r\n\r\n      \t\t\t\twhile($posts-&gt;have_posts()) : \r\n\r\n         \t\t\t\t$posts-&gt;the_post();\r\n\r\n     \t \t\t\t\t\/\/ Display posts here\r\n\r\n\t\t\t       <!--?php endwhile;      \t \t\tif ($postsperpage  --> 0) :\r\n\r\n\t\t\t\t\t$numSearchFilters = $totalPosts \/ $postsperpage;\r\n\r\n\t\t\t\t\tif ($numSearchFilters &gt; 1)  :  ?&gt;<\/pre>\r\nAs always the full including\u00a0the mark-up is <a href=\"http:\/\/jondjones.com\/wp-content\/uploads\/2013\/05\/wordpresspaginationexample1.zip\"> here<\/a>.","excerpt":"Hey all, this week&#8217;s been a bit of a change for me as I&#8217;ve been back to roots playing with PHP for a client. They had a requirement to make a news page in WordPress that had Google like search pagination for their news and jobs categories. Out of the box, WordPress only comes with [&hellip;]","date":"2013-05-24 14:15:31","author":"Jon D Jones","thumbnail":"http:\/\/jondjones.com\/wp-content\/uploads\/2013\/06\/bannerwp.jpg","categories":["Wordpress"],"tags":[null]}]